---
controller_components:
  - credential_types
  - credentials
  - execution_environments
  - projects
  - inventories
  - inventory_sources
  - job_templates

aap_cred: "AAP API Cred"
ssh_cred: "SSH Cred"
vcenter_cred: "vCenter Cred"
quay_cred: "Quay"
ssl_cert_cred: "SSL Wildcard"
dynatrace_cred: "Dynatrace API"

vcenter_ee: vCenter EE
rhel_ee: RHEL EE
aap_ee: AAP EE
dynatrace_ee: Dynatrace EE

inventory_eda_demo: EDA Demo Inventory
project_eda_demo: EDA Demo Project

controller_credentials:
- name: "{{ aap_cred }}"
  description: "{{ aap_cred }}"
  organization: Default
  credential_type: Red Hat Ansible Automation Platform
  inputs:
    host: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}"
    password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
    username: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
    verify_ssl: "{{ lookup('ansible.builtin.env', 'CONTROLLER_VALIDATE_CERTS') | ansible.builtin.bool }}"
# - name: "{{ ssh_cred }}"
#   description: "{{ ssh_cred }}"
#   organization: Default
#   credential_type: Machine
#   inputs:
#     username: "{{ lookup('ansible.builtin.env', 'ANSIBLE_SSH_USERNAME') }}"
#     ssh_key_data: "{{ lookup('ansible.builtin.env', 'ANSIBLE_SSH_PRIVATE_KEY') }}"
#     become_method: "sudo"
- name: "{{ vcenter_cred }}"
  description: "{{ vcenter_cred }}"
  organization: Default
  credential_type: VMware vCenter
  inputs:
    host: "{{ lookup('ansible.builtin.env', 'VMWARE_HOST') }}"
    password: "{{ lookup('ansible.builtin.env', 'VMWARE_PASSWORD') }}"
    username: "{{ lookup('ansible.builtin.env', 'VMWARE_USER') }}"
- name: "{{ quay_cred }}"
  description: "{{ quay_cred }}"
  organization: Default
  credential_type: Container Registry
  inputs:
    host: "{{ lookup('ansible.builtin.env', 'QUAY_HOST') }}"
    password: "{{ lookup('ansible.builtin.env', 'QUAY_PASSWORD') }}"
    username: "{{ lookup('ansible.builtin.env', 'QUAY_USERNAME') }}"
    verify_ssl: true
- name: "{{ dynatrace_cred }}"
  description: "{{ dynatrace_cred }}"
  organization: Default
  credential_type: "{{ dynatrace_cred }}"
  inputs:
    oneagent_environment_url: "{{ lookup('ansible.builtin.env', 'ONEAGENT_ENVIRONMENT_URL') }}"
    oneagent_paas_token: "{{ lookup('ansible.builtin.env', 'ONEAGENT_PAAS_TOKEN') }}"


controller_projects:
  - name: "{{ project_eda_demo }}"
    organization: Default
    scm_branch: main
    scm_clean: 'no'
    scm_delete_on_update: 'no'
    scm_type: git
    scm_update_on_launch: 'no'
    scm_url: https://github.com/brianaddicks/demo-eda

controller_execution_environments:
  - name: "{{ vcenter_ee }}"
    image: quay.io/rh_ee_baddicks/vsphere-ee
    credential: "{{ quay_cred }}"
    pull: always
  - name: "{{ rhel_ee }}"
    image: quay.io/rh_ee_baddicks/rhel-90-ee
    credential: "{{ quay_cred }}"
    pull: always
  - name: "{{ aap_ee }}"
    image: quay.io/rh_ee_baddicks/ansible-controller-ee
    credential: "{{ quay_cred }}"
    pull: always
  - name: "{{ dynatrace_ee }}"
    image: quay.io/rh_ee_baddicks/dynatrace-ee
    credential: "{{ quay_cred }}"
    pull: always

controller_inventories:
  - name: "{{ inventory_eda_demo }}"
    description: "{{ inventory_eda_demo }}"
    organization: Default

controller_inventory_sources:
  - name: EDA Demo Repo
    source: scm
    inventory: "{{ inventory_eda_demo }}"
    source_path: inventory.yml
    overwrite: true
    update_on_launch: false
    update_cache_timeout: 0
    source_project: "{{ project_eda_demo }}"

controller_templates:
  - name: "Linux - Webserver Setup"
    job_type: run
    inventory: "{{ inventory_eda_demo }}"
    project: "{{ project_eda_demo }}"
    playbook: "playbooks/webserver_setup.yml"
    execution_environment: "{{ rhel_ee }}"
    credentials:
      - "{{ ssh_cred }}"
  - name: "Linux - HAProxy Setup"
    job_type: run
    inventory: "{{ inventory_eda_demo }}"
    project: "{{ project_eda_demo }}"
    playbook: "playbooks/haproxy_setup.yml"
    execution_environment: "{{ rhel_ee }}"
    credentials:
      - "{{ ssh_cred }}"
      - "{{ ssl_cert_cred }}"
  - name: "Linux - Install Dynatrace OneAgent"
    job_type: run
    inventory: "{{ inventory_eda_demo }}"
    project: "{{ project_eda_demo }}"
    playbook: "playbooks/oneagent_install.yml"
    execution_environment: "{{ rhel_ee }}"
    credentials:
      - "{{ ssh_cred }}"
      - "{{ dynatrace_cred }}"

controller_credential_types:
    - name: SSL Certificate
      description: SSL Certificate
      inputs:
        fields:
        - secret: true
          type: string
          id: cred_ssl_private_key
          label: Private Key
          multiline: true
        - secret: false
          type: string
          id: cred_ssl_certifcate
          label: Certificate
          multiline: true
        - secret: false
          type: string
          id: cred_ssl_fullchain
          label: Certificate Chain
          multiline: true
        required:
        - cred_ssl_private_key
        - cred_ssl_certifcate
      injectors:
        extra_vars:
          cred_ssl_private_key: !unsafe "{{ cred_ssl_private_key }}"
          cred_ssl_certifcate: !unsafe "{{ cred_ssl_certifcate }}"
          cred_ssl_fullchain: !unsafe "{{ cred_ssl_fullchain }}"
        env:
          cred_ssl_private_key_env: !unsafe "{{ cred_ssl_private_key }}"
          cred_ssl_certifcate_env: !unsafe "{{ cred_ssl_certifcate }}"
          cred_ssl_fullchain_env: !unsafe "{{ cred_ssl_fullchain }}"
    - name: Dynatrace API
      description: Dynatrace API
      inputs:
        fields:
        - type: string
          id: oneagent_environment_url
          label: OneAgent Environment URL
          multiline: false
        - type: string
          id: oneagent_paas_token
          label: OneAgent PAAS Token
          secret: true
          multiline: false
        required:
        - oneagent_environment_url
        - oneagent_paas_token
      injectors:
        extra_vars:
          oneagent_environment_url: !unsafe "{{ oneagent_environment_url }}"
          oneagent_paas_token: !unsafe "{{ oneagent_paas_token }}"
        env:
          oneagent_environment_url_env: !unsafe "{{ oneagent_environment_url }}"
          oneagent_paas_token_env: !unsafe "{{ oneagent_paas_token }}"
